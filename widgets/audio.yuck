;; Compiled C
(deflisten audio-sources :initial ""
  `~/.config/eww/bin/mpris_fetch`)

(deflisten audio-sinks :initial ""
  `~/.config/eww/bin/audio_out`) 

;; Shell Scripts (Archived)
; (deflisten audio-sources :initial ""
  ; `~/.config/eww/scripts/Archives/mpris_fetch`)

; (deflisten audio-sinks :initial ""
  ; `/usr/bin/bash ~/.config/eww/scripts/Archives/get-audio-sinks`) 

(defwidget audioButton []
  (box 
    (button :onclick "eww open --toggle audioPanel" " ")))

(defwindow audioPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :width 500
              :anchor "top right")
  (eventbox
    :onhover 'eww update hover_state="audioPanel"'
    :onhoverlost 'eww update hover_state="" && ./scripts/check_hover.sh audioPanel &'
    (box
      :class "window"
      :space-evenly false 
      :orientation "v"
      (audioDevices)
      (audioSources))))

(defwidget audioDevices []
  (box 
    :space-evenly false
    (label
      :text "${audio-sinks}"
      :visible false
      :show-truncated false
      :wrap true)
    (for s in audio-sinks
      (box
        :hexpand true
        :space-evenly false
        (box :class "btns-box" :tooltip "${s.name}"
          (button :class "${s.default == true ? "active" : "inactive"}"
            :onclick "wpctl set-default ${s.id}"
            :width 75
            :height 75
            (image 
              :path "./assets/icons/${s.icon == "audio-headset-bluetooth" ? "audio-earbuds" : s.icon == "audio-speakers" ? "audio-speakers" : "media-tape"}.svg"
              :image-height 42)))
                ; (label :text "${s.icon == "audio-earbuds" ? "󱡏" :
                                ; s.icon == "audio-card-analog-pci" ? "󰓃" : "?"}"))))
        (box 
          :hexpand true
          :orientation "v"
          :space-evenly false
          :valign "end"
          (box :space-evenly false
            (label :class "inactive" :text "${s.volume}")
            (scale
              :hexpand true
              :class "low-vis pushright pushdown"
              :round-digits 0
              :min 0 
              :max 101
              :value "${s.volume}"
              :onchange "./scripts/set-volume ${s.id} {}"))
          (box :class "media-buttons"
            :space-evenly false
            :spacing 1
            (button :halign "start" :onclick "wpctl set-mute ${s.id} toggle" 
              (image :image-height 24 :path "./assets/icons/notification-audio-volume-${s.mute == "yes" ? "muted" : "high"}.svg"))))))))


(defwidget audioSources []
  (box 
    (label
      :text "${audio-sources} ${audio-sinks}"
      :visible false
      :show-truncated false
      :wrap true)
    (box 
      :orientation "v"
      :space-evenly false
      (for p in audio-sources
        (eventbox
          :onhover `eww update playerhov="${p.DesktopEntry}"`
          :onhoverlost `eww update playerhov=""`
          (box
            :class "panel"
            :visible "${p.PlaybackStatus == "Stopped" ? false : true}"
            :space-evenly false
            :orientation "v"
            (label :class "green" :xalign 0 :wrap true :show-truncated false :text "${p.title}")
            (box 
              :space-evenly false
              :spacing 10
              (box
                :halign "start"
                (image :image-height 100 :path "${matches(p.title, " - Twitch$") == true ? "./assets/TwitchLogo.png" : p.artUrl}"))
              (box 
                :class "footer"
                :hexpand true
                :orientation "v"
                :space-evenly false
                (label :class "subtext" :xalign 0 :text "${p.artist}")
                (label :class "subtext" :xalign 0 :text "${p.album}")
                (box 
                  :class "media-buttons"
                  :orientation "h"
                  (box 
                    :halign "start"
                    :spacing 10
                    (button 
                      :class "media ${p.CanGoPrevious == false ? "inactive" : "active"}"
                      :onclick "playerctl --player=${p.DesktopEntry} previous" "󰒮")
                    (button 
                      :class "media ${p.CanPlay == false ? "inactive" : "active" }" 
                      :onclick "playerctl --player=${p.DesktopEntry} play-pause"
                      (label 
                        :text "${
                        p.PlaybackStatus == "Playing" ? "󰏤" : "󰐊"
                             }"))
                    (button 
                      :class "media ${p.CanGoNext == false ? "inactive" : "active" }"
                      :onclick "playerctl --player=${p.DesktopEntry} next" "󰒭"))
                  (box
                    :halign "end"
                    :spacing 10
                    (button
                      :class "media ${p.LoopStatus == "Track" ? "active" :
                                      p.LoopStatus == "Playlist" ? "active" :
                                      p.LoopStatus == "None" ? "inactive" : "disabled"}"
                      :onclick "playerctl --player=${p.DesktopEntry} loop ${
                                      p.LoopStatus == "None" ? "Track" : 
                                      p.LoopStatus == "Track" ? "Playlist" : "None"}"
                      (label :text "${
                             p.LoopStatus == "Track" ? "󰑘" : 
                             p.LoopStatus == "Playlist" ? "󰑖" : 
                             p.LoopStatus == "None" ? "󰑖" : 
                             "󰑗"
                                    }"))
                    (button 
                      :class "media ${p.Shuffle == true ? "active" :
                                      p.Shuffle == false ? "inactive" : "disabled"}" 
                      :onclick "playerctl --player=${p.DesktopEntry} shuffle ${
                                    p.Shuffle == true ? "off" : "on"}"
                      (label :text "${
                             p.Shuffle == true ? "󰒟" : 
                             p.Shuffle == false ? "󰒞" : 
                             "󰒝"
                                     }"))))
                (scale
                  :class "${p.CanSeek == false ? "inactive" :
                         "${matches(p.title, "Twitch$")}" == true ? "inactive" :
                         ""}"
                  :max 99 
                  :onchange "playerctl --player=${p.DesktopEntry} position $((({} * ${round(p.length / 1000000,0)}) / 99))"
                  :value "${round((99 / (p.length)) * (p.Position),0)}") 
                (label 
                  :xalign 1 
                  :class "${p.lengthHMS == "live" ? "red" : ""}"
                  :text "${
                  p.lengthHMS == "live" ? " live" :
                  p.length == "" ? "--/--" : 
                  p.length > 360000000000 == true ? "--/--" : ;unsupported input over 100 hours
                  p.length > 36000000000 == true ? "${p.PositionHMS}/${p.lengthHMS}" : ;HH 
                  p.length > 3600000000 == true ? "${substring(p.PositionHMS, 1,7)}/${substring(p.lengthHMS, 1,7)}" : ;H
                  p.length > 600000000 == true ? "${substring(p.PositionHMS, 3,5)}/${substring(p.lengthHMS, 3,5)}" : ;MM
                  p.length > 60000000 == true ? "${substring(p.PositionHMS, 4,4)}/${substring(p.lengthHMS, 4,4)}" : ;M
                  p.length > 10000000 == true ? "${substring(p.PositionHMS, 6,2)}/${substring(p.lengthHMS, 6,2)}" : ;SS
                  "${substring(p.PositionHMS, 7,1)}/${substring(p.lengthHMS, 7,1)}" ;S
                         }"))) 
            (box 
              :space-evenly false
              :class "footer"
              (playerVolume
                :pvol "${p.volume}"
                :pmute "${p.mute}"
                :targetID "${p.id}"
                :sinkID "${p.sinkID}"
                :serial "${p.serial}"
                :switch "${p.DesktopEntry}")
              (label 
                :class "subtext"
                :hexpand "${p.id == "null" ? true : false}"
                :halign "end" 
                :text "${p.DesktopEntry}"))))))))

(defwidget playerVolume [pvol pmute targetID sinkID serial switch]
  (box
    :hexpand true
    :halign scale_exp
    :space-evenly false
    :visible "${targetID == "null" ? false : true}"
    (box 
      :halign "start" 
      :valign 0.5 
      :visible "${arraylength(audio-sinks) > 1 ? true : false}"
      (for s in audio-sinks
        (button
          :onclick "pactl move-sink-input ${serial} ${s.sink}"
          :tooltip "${s.name}"
          :class "media ${s.sink == sinkID ? "active" : "inactive"}"
          (label :text "${s.icon == "audio-speakers" ? "󰓃" :
                          s.icon == "audio-headset-bluetooth" ? "󱡏 " : "?"}"))))
    (eventbox
      :onhover 'eww update playerVol=true && eww update scale_exp="fill"'
      :onhoverlost 'eww update playerVol=false && eww update scale_exp="start"'
        (box
          :space-evenly false
          (eventbox
            :onclick 'wpctl set-mute ${targetID} toggle'
            (box :space-evenly false :valign 0.5
              (image :class "pushright" :image-height 16 :path "./assets/icons/notification-audio-volume-${pmute == "true" ? "muted" : "high"}.svg")
              (label 
                :class "${pmute == true ? "red" : ""}"
                :text pvol)))
          (revealer
            :transition "slideleft"
            :reveal "${playerVol == true ? "${playerhov == switch ? true : false}": false}"
            :duration "1000ms"
            (scale
              :class "low-vis pushleft pushright pushdown"
              :width 150
              :value pvol
              :onchange "./scripts/set-volume ${targetID} {}"
              :max 101
              :min 0))))))

(defvar playerVol false)
(defvar scale_exp "start")
(defvar playerhov "")
